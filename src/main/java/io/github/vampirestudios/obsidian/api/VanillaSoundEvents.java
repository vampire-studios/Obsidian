package io.github.vampirestudios.obsidian.api;

import com.google.common.collect.ImmutableMap;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.block.SoundType;

import java.util.Map;

public class VanillaSoundEvents {
    public static final Map<ResourceLocation, SoundType> SOUND_TYPES = ImmutableMap.<ResourceLocation, SoundType>builder()
            .put(new ResourceLocation("wood"), SoundType.WOOD)
            .put(new ResourceLocation("gravel"), SoundType.GRAVEL)
            .put(new ResourceLocation("grass"), SoundType.GRASS)
            .put(new ResourceLocation("lily_pad"), SoundType.LILY_PAD)
            .put(new ResourceLocation("stone"), SoundType.STONE)
            .put(new ResourceLocation("metal"), SoundType.METAL)
            .put(new ResourceLocation("glass"), SoundType.GLASS)
            .put(new ResourceLocation("wool"), SoundType.WOOL)
            .put(new ResourceLocation("sand"), SoundType.SAND)
            .put(new ResourceLocation("snow"), SoundType.SNOW)
            .put(new ResourceLocation("powder_snow"), SoundType.POWDER_SNOW)
            .put(new ResourceLocation("ladder"), SoundType.LADDER)
            .put(new ResourceLocation("anvil"), SoundType.ANVIL)
            .put(new ResourceLocation("slime"), SoundType.SLIME_BLOCK)
            .put(new ResourceLocation("honey"), SoundType.HONEY_BLOCK)
            .put(new ResourceLocation("wet_grass"), SoundType.WET_GRASS)
            .put(new ResourceLocation("coral"), SoundType.CORAL_BLOCK)
            .put(new ResourceLocation("bamboo"), SoundType.BAMBOO)
            .put(new ResourceLocation("bamboo_sapling"), SoundType.BAMBOO_SAPLING)
            .put(new ResourceLocation("scaffolding"), SoundType.SCAFFOLDING)
            .put(new ResourceLocation("sweet_berry_bush"), SoundType.SWEET_BERRY_BUSH)
            .put(new ResourceLocation("crop"), SoundType.CROP)
            .put(new ResourceLocation("stem"), SoundType.HARD_CROP)
            .put(new ResourceLocation("vine"), SoundType.VINE)
            .put(new ResourceLocation("nether_wart"), SoundType.NETHER_WART)
            .put(new ResourceLocation("lantern"), SoundType.LANTERN)
            .put(new ResourceLocation("nether_stem"), SoundType.STEM)
            .put(new ResourceLocation("nylium"), SoundType.NYLIUM)
            .put(new ResourceLocation("fungus"), SoundType.FUNGUS)
            .put(new ResourceLocation("roots"), SoundType.ROOTS)
            .put(new ResourceLocation("shroomlight"), SoundType.SHROOMLIGHT)
            .put(new ResourceLocation("weeping_vines"), SoundType.WEEPING_VINES)
            .put(new ResourceLocation("weeping_vines_low_pitch"), SoundType.TWISTING_VINES)
            .put(new ResourceLocation("soul_sand"), SoundType.SOUL_SAND)
            .put(new ResourceLocation("soul_soil"), SoundType.SOUL_SOIL)
            .put(new ResourceLocation("basalt"), SoundType.BASALT)
            .put(new ResourceLocation("wart_block"), SoundType.WART_BLOCK)
            .put(new ResourceLocation("netherrack"), SoundType.NETHERRACK)
            .put(new ResourceLocation("nether_bricks"), SoundType.NETHER_BRICKS)
            .put(new ResourceLocation("nether_sprouts"), SoundType.NETHER_SPROUTS)
            .put(new ResourceLocation("nether_ore"), SoundType.NETHER_ORE)
            .put(new ResourceLocation("bone"), SoundType.BONE_BLOCK)
            .put(new ResourceLocation("netherite"), SoundType.NETHERITE_BLOCK)
            .put(new ResourceLocation("ancient_debris"), SoundType.ANCIENT_DEBRIS)
            .put(new ResourceLocation("lodestone"), SoundType.LODESTONE)
            .put(new ResourceLocation("chain"), SoundType.CHAIN)
            .put(new ResourceLocation("nether_gold_ore"), SoundType.NETHER_GOLD_ORE)
            .put(new ResourceLocation("gilded_blackstone"), SoundType.GILDED_BLACKSTONE)
            .put(new ResourceLocation("candle"), SoundType.CANDLE)
            .put(new ResourceLocation("amethyst_block"), SoundType.AMETHYST)
            .put(new ResourceLocation("amethyst_cluster"), SoundType.AMETHYST_CLUSTER)
            .put(new ResourceLocation("small_amethyst_bud"), SoundType.SMALL_AMETHYST_BUD)
            .put(new ResourceLocation("medium_amethyst_bud"), SoundType.MEDIUM_AMETHYST_BUD)
            .put(new ResourceLocation("large_amethyst_bud"), SoundType.LARGE_AMETHYST_BUD)
            .put(new ResourceLocation("tuff"), SoundType.TUFF)
            .put(new ResourceLocation("calcite"), SoundType.CALCITE)
            .put(new ResourceLocation("dripstone_block"), SoundType.DRIPSTONE_BLOCK)
            .put(new ResourceLocation("pointed_dripstone"), SoundType.POINTED_DRIPSTONE)
            .put(new ResourceLocation("copper"), SoundType.COPPER)
            .put(new ResourceLocation("cave_vines"), SoundType.CAVE_VINES)
            .put(new ResourceLocation("spore_blossom"), SoundType.SPORE_BLOSSOM)
            .put(new ResourceLocation("azalea"), SoundType.AZALEA)
            .put(new ResourceLocation("flowering_azalea"), SoundType.FLOWERING_AZALEA)
            .put(new ResourceLocation("moss_carpet"), SoundType.MOSS_CARPET)
            .put(new ResourceLocation("pink_petals"), SoundType.PINK_PETALS)
            .put(new ResourceLocation("moss_block"), SoundType.MOSS)
            .put(new ResourceLocation("big_dripleaf"), SoundType.BIG_DRIPLEAF)
            .put(new ResourceLocation("small_dripleaf"), SoundType.SMALL_DRIPLEAF)
            .put(new ResourceLocation("rooted_dirt"), SoundType.ROOTED_DIRT)
            .put(new ResourceLocation("hanging_roots"), SoundType.HANGING_ROOTS)
            .put(new ResourceLocation("azalea_leaves"), SoundType.AZALEA_LEAVES)
            .put(new ResourceLocation("sculk_sensor"), SoundType.SCULK_SENSOR)
            .put(new ResourceLocation("sculk_catalyst"), SoundType.SCULK_CATALYST)
            .put(new ResourceLocation("sculk"), SoundType.SCULK)
            .put(new ResourceLocation("sculk_vein"), SoundType.SCULK_VEIN)
            .put(new ResourceLocation("sculk_shrieker"), SoundType.SCULK_SHRIEKER)
            .put(new ResourceLocation("glow_lichen"), SoundType.GLOW_LICHEN)
            .put(new ResourceLocation("deepslate"), SoundType.DEEPSLATE)
            .put(new ResourceLocation("deepslate_bricks"), SoundType.DEEPSLATE_BRICKS)
            .put(new ResourceLocation("deepslate_tiles"), SoundType.DEEPSLATE_TILES)
            .put(new ResourceLocation("polished_deepslate"), SoundType.POLISHED_DEEPSLATE)
            .put(new ResourceLocation("froglight"), SoundType.FROGLIGHT)
            .put(new ResourceLocation("frogspawn"), SoundType.FROGSPAWN)
            .put(new ResourceLocation("mangrove_roots"), SoundType.MANGROVE_ROOTS)
            .put(new ResourceLocation("muddy_mangrove_roots"), SoundType.MUDDY_MANGROVE_ROOTS)
            .put(new ResourceLocation("mud"), SoundType.MUD)
            .put(new ResourceLocation("mud_bricks"), SoundType.MUD_BRICKS)
            .put(new ResourceLocation("packed_mud"), SoundType.PACKED_MUD)
            .put(new ResourceLocation("hanging_sign"), SoundType.HANGING_SIGN)
            .put(new ResourceLocation("nether_wood_hanging_sign"), SoundType.NETHER_WOOD_HANGING_SIGN)
            .put(new ResourceLocation("bamboo_wood_hanging_sign"), SoundType.BAMBOO_WOOD_HANGING_SIGN)
            .put(new ResourceLocation("bamboo_wood"), SoundType.BAMBOO_WOOD)
            .put(new ResourceLocation("nether_wood"), SoundType.NETHER_WOOD)
            .put(new ResourceLocation("cherry_wood"), SoundType.CHERRY_WOOD)
            .put(new ResourceLocation("cherry_sapling"), SoundType.CHERRY_SAPLING)
            .put(new ResourceLocation("cherry_leaves"), SoundType.CHERRY_LEAVES)
            .put(new ResourceLocation("cherry_wood_hanging_sign"), SoundType.CHERRY_WOOD_HANGING_SIGN)
            .put(new ResourceLocation("chiseled_bookshelf"), SoundType.CHISELED_BOOKSHELF)
            .put(new ResourceLocation("suspicious_sand"), SoundType.SUSPICIOUS_SAND)
            .put(new ResourceLocation("suspicious_gravel"), SoundType.SUSPICIOUS_GRAVEL)
            .put(new ResourceLocation("decorated_pot"), SoundType.DECORATED_POT)
            .put(new ResourceLocation("decorated_pot_shatter"), SoundType.DECORATED_POT_CRACKED)
            .build();

    public static void init() {
        /* nothing to do */
    }

    public static SoundType get(ResourceLocation mapColor) {
        SoundType color = SOUND_TYPES.get(mapColor);
        if (color == null)
            throw new IllegalStateException("No sound type known with name " + mapColor);
        return color;
    }
}