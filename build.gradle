plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id "io.github.vampirestudios.modrinthmaven" version "1.0.1"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://raw.githubusercontent.com/vampire-studios/VampireStudiosMaven/main/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.fabricmc.net"}
    maven { url = "https://server.bbkr.space/artifactory/libs-release/" }
}

minecraft {
    accessWidener = file("src/main/resources/obsidian.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("io.github.vampirestudios:artifice:${project.artifice_version}") { exclude group: "net.fabricmc.fabric-api" }
    include ("io.github.vampirestudios:artifice:${project.artifice_version}") { exclude group: "net.fabricmc.fabric-api" }

    modImplementation ("io.github.vampirestudios:VampireLib-Fabric:3.0.0+build.2-1.16.5") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {}
}
