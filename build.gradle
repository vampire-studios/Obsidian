plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id "io.github.juuxel.loom-quiltflower" version "1.6.0"
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.0.0'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + "build." + project.build_number + "-" + project.minecraft_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://raw.githubusercontent.com/vampire-studios/VampireStudiosMaven/main/" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://server.bbkr.space/artifactory/libs-release/" }
    maven { url "https://repo.repsy.io/mvn/xxx_inaksis_xxx/inaksis" }
    maven { url "https://hephaestus.dev/release" }
    maven { url "https://maven.ryanliptak.com/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://maven.wispforest.io" }
    maven { url "https://maven.minecraftforge.net/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://repo.codemc.org/repository/maven-public" }
    maven { url "https://mvn.lumine.io/repository/maven-public/" }
}

loom {
    accessWidenerPath = file("src/main/resources/obsidian.accesswidener")
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered {
        addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
    }
    modImplementation libs.fabric.loader

    modImplementation(libs.fabric.api) {
        force = true
    }

    modApi (libs.clothconfig) {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include (libs.clothconfig) {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation (libs.vampirelib) {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }
    include (libs.vampirelib) {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }

    modImplementation (libs.appleskin) {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }
    include (libs.appleskin) {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    modImplementation (libs.owo.lib) {
        exclude group: "net.fabricmc.fabric-api"
    }
    include (libs.owo.lib) {
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation (libs.libzoomer) {
        exclude group: "net.fabricmc.fabric-api"
    }
    include (libs.libzoomer) {
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation "com.dfsek:paralithic:0.6.0"
//    modImplementation "com.dfsek:substrate:0.5.1"

    implementation "com.github.Ocelot5836:molang-compiler:7e33b9d"
    implementation "com.ticxo.modelengine:Model-Engine:parent"
    implementation "com.ticxo.modelengine:api:R2.4.1"

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {}
}
