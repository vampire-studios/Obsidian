plugins {
    id 'fabric-loom' version '0.10.+'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://raw.githubusercontent.com/vampire-studios/VampireStudiosMaven/main/" }
    maven { url="https://jitpack.io" }
    maven { url "https://maven.shedaniel.me" }
    maven { url="https://server.bbkr.space/artifactory/libs-release/" }
    maven { url='https://repo.repsy.io/mvn/xxx_inaksis_xxx/inaksis' }
    maven { url="https://hephaestus.dev/release" }
    maven { url "https://maven.ryanliptak.com/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
}

loom {
    accessWidenerPath = file("src/main/resources/obsidian.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        force = true
    }

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
        exclude group: "net.fabricmc.fabric-api"
    }
    include("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.3-1.17-pre1") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }
    include ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.3-1.17-pre1") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }

    modImplementation "com.github.EnnuiL:LibZoomer:${project.libzoomer_version}"
    include "com.github.EnnuiL:LibZoomer:${project.libzoomer_version}"

    modImplementation ("squeek.appleskin:appleskin-fabric:mc1.17-2.1.3") {
        transitive = false
    }
    include ("squeek.appleskin:appleskin-fabric:mc1.17-2.1.3")

    modApi "maven.modrinth:mealapi:0.3+1.17"
    include "maven.modrinth:mealapi:0.3+1.17"

    modImplementation "com.github.glisco03:owo-lib:${project.owo_version}"
    include "com.github.glisco03:owo-lib:${project.owo_version}"

    modImplementation "com.teamwizardry.librarianlib:etcetera:1.17-quilt-SNAPSHOT"
    modImplementation "com.teamwizardry.librarianlib:facade:1.17-quilt-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {}
}
