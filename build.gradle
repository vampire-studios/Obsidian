plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = "$mod_version+build.$build_number-$minecraft_version"
group = maven_group

repositories {
	mavenCentral()
	mavenLocal()
	maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
	maven { url = 'https://server.bbkr.space/artifactory/libs-release/' }
	maven { url = 'https://repo.repsy.io/mvn/xxx_inaksis_xxx/inaksis' }
	maven { url = 'https://repo.codemc.org/repository/maven-public' }
	maven { url = 'https://maven.quiltmc.org/repository/release' }
	maven { url = 'https://maven.quiltmc.org/repository/snapshot' }
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = 'https://maven.terraformersmc.com/' }
	maven { url = 'https://api.modrinth.com/maven' }
	maven { url = 'https://hephaestus.dev/release' }
	maven { url = 'https://maven.ryanliptak.com/' }
	maven { url = 'https://maven.wispforest.io' }
	maven { url = 'https://maven.shedaniel.me' }
	maven { url = 'https://maven.siphalor.de' }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = 'https://jitpack.io' }
	maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
	maven { url "https://raw.githubusercontent.com/kotlin-graphics/mary/master" }
}

loom {
	accessWidenerPath = file("src/main/resources/obsidian.accesswidener")
}

quiltflower {
	addToRuntimeClasspath.set(true)
}

dependencies {
	def noFapi = { exclude group: 'net.fabricmc.fabric-api' }
	def noFLoader = { exclude group: 'net.fabricmc' }
	def noCottonMC = { exclude group: 'io.github.cottonmc' }
	def noQuiltMC = { exclude group: 'org.quiltmc' }

	minecraft libs.minecraft
	mappings libs.yarn.mappings
//	mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2")

	modImplementation libs.fabric.loader

	modImplementation (libs.bundles.fabric) {
		force = true
	}

	modImplementation (libs.clothconfig) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}
	include (libs.clothconfig) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}

	modImplementation (libs.vampirelib) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}
	include (libs.vampirelib) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}

	modImplementation (libs.appleskin) {
		transitive false
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}
	include (libs.appleskin) {
		transitive false
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}

	modImplementation (libs.owo.lib) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}
	include (libs.owo.sentinel) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}

	/*modImplementation (libs.libzoomer) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}
	include (libs.libzoomer) {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}*/

	modImplementation ("io.wispforest:condensed_creative-fabric:${libs.versions.cct.get()}") {
		noFapi
		noFLoader
		noCottonMC
		noQuiltMC
	}

	implementation group: 'com.amihaiemil.web', name: 'eo-yaml', version: '6.0.1'
	implementation 'com.electronwill.night-config:core:3.6.6'
	implementation 'com.electronwill.night-config:toml:3.6.6'
	implementation 'com.electronwill.night-config:yaml:3.6.6'
	implementation 'com.electronwill.night-config:hocon:3.6.6'

	implementation 'org.snakeyaml:snakeyaml-engine:2.4'
	implementation 'org.hjson:hjson:3.0.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-toml:2.14.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.14.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.0'


	implementation "io.github.spair:imgui-java-binding:$imguiVersion"
	implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"

	implementation "io.github.spair:imgui-java-natives-windows:$imguiVersion"
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand 'version': version
	}
}

java {
	withSourcesJar()
	withJavadocJar()
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

compileJava {
	options.compilerArgs += '--enable-preview'
}

jar {
	from('LICENSE') {
		rename {
			"${it}_$archivesBaseName"
		}
	}
}

publishing {
	publications {
		mavenJava( MavenPublication ) {
			from components.java
		}
	}
	repositories {}
}
