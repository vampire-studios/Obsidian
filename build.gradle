plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal()
    maven { url="https://jitpack.io" }
    maven { url "https://maven.shedaniel.me" }
    maven { url="https://server.bbkr.space/artifactory/libs-release/" }
    maven { url='https://repo.repsy.io/mvn/xxx_inaksis_xxx/inaksis' }
    maven { url="https://hephaestus.dev/release" }
    maven { url="https://maven.terraformersmc.com/" }
    maven { url "https://raw.githubusercontent.com/vampire-studios/VampireStudiosMaven/main/" }
}

minecraft {
    accessWidener = file("src/main/resources/obsidian.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.2-21w20a") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }
    include ("io.github.vampirestudios:VampireLib-Fabric:3.0.2+build.2-21w20a") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "io.github.cottonmc"
    }

    modImplementation ("me.shedaniel.cloth:config-2:${project.cloth_config_version}") { exclude group: "net.fabricmc.fabric-api" }
    include ("me.shedaniel.cloth:config-2:${project.cloth_config_version}") { exclude group: "net.fabricmc.fabric-api" }

    modImplementation("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig1u}") {
        exclude group: "net.fabricmc.fabric-api"
        force = true
    }
    include("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig1u}") {
        exclude group: "net.fabricmc.fabric-api"
        force = true
    }

    modApi("me.shedaniel.cloth.api:cloth-api:${project.cloth_events_version}") {
        exclude group: "net.fabricmc.fabric-api"
        transitive = false
    }

    modImplementation "com.terraformersmc:modmenu:2.0.0-beta.3"
    modImplementation "com.github.shnupbups:oxidizelib:1.0.0a"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {}
}
